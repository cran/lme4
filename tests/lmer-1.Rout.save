
R version 2.12.1 RC (2010-12-10 r53825)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### suppressPackageStartupMessages(...)  as we have an *.Rout.save to Rdiff against
> stopifnot(suppressPackageStartupMessages(require(lme4)))
> options(show.signif.stars = FALSE)
> 
> (fm1 <-  lmer(Reaction ~ Days + (Days|Subject), sleepstudy))
Linear mixed model fit by REML 
Formula: Reaction ~ Days + (Days | Subject) 
   Data: sleepstudy 
  AIC  BIC logLik deviance REMLdev
 1756 1775 -871.8     1752    1744
Random effects:
 Groups   Name        Variance Std.Dev. Corr  
 Subject  (Intercept) 612.092  24.7405        
          Days         35.072   5.9221  0.066 
 Residual             654.941  25.5918        
Number of obs: 180, groups: Subject, 18

Fixed effects:
            Estimate Std. Error t value
(Intercept)  251.405      6.825   36.84
Days          10.467      1.546    6.77

Correlation of Fixed Effects:
     (Intr)
Days -0.138
> (fm1a <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy, REML = FALSE))
Linear mixed model fit by maximum likelihood 
Formula: Reaction ~ Days + (Days | Subject) 
   Data: sleepstudy 
  AIC  BIC logLik deviance REMLdev
 1764 1783   -876     1752    1744
Random effects:
 Groups   Name        Variance Std.Dev. Corr  
 Subject  (Intercept) 565.518  23.7806        
          Days         32.682   5.7168  0.081 
 Residual             654.941  25.5918        
Number of obs: 180, groups: Subject, 18

Fixed effects:
            Estimate Std. Error t value
(Intercept)  251.405      6.632   37.91
Days          10.467      1.502    6.97

Correlation of Fixed Effects:
     (Intr)
Days -0.138
> (fm2 <-  lmer(Reaction ~ Days + (1|Subject) + (0+Days|Subject), sleepstudy))
Linear mixed model fit by REML 
Formula: Reaction ~ Days + (1 | Subject) + (0 + Days | Subject) 
   Data: sleepstudy 
  AIC  BIC logLik deviance REMLdev
 1754 1770 -871.8     1752    1744
Random effects:
 Groups   Name        Variance Std.Dev.
 Subject  (Intercept) 627.568  25.0513 
 Subject  Days         35.858   5.9882 
 Residual             653.584  25.5653 
Number of obs: 180, groups: Subject, 18

Fixed effects:
            Estimate Std. Error t value
(Intercept)  251.405      6.885   36.51
Days          10.467      1.559    6.71

Correlation of Fixed Effects:
     (Intr)
Days -0.184
> 
> ## transformed vars should work[even if non-sensical as here;failed in 0.995-1]
> fm2l <- lmer(log(Reaction) ~ log(Days+1) + (log(Days+1)|Subject),
+              data = sleepstudy, REML = FALSE)
> xfm2 <- expand(fm2l)
> stopifnot(is(fm1, "mer"), is(fm2l, "mer"),
+           is(xfm2$P, "sparseMatrix"))
> 
> AIC(fm1); AIC(fm2)
[1] 1755.628
[1] 1753.669
> BIC(fm1); BIC(fm2)
[1] 1774.786
[1] 1769.634
> ## not yet: if(getRversion() > "2.11.0") {
> ##  AIC(fm1, fm2)
> ##  BIC(fm1, fm2)
> ## }
> 
> ## generalized linear mixed model
> (m1 <- lmer(cbind(incidence, size - incidence) ~ period + (1 | herd),
+             family = binomial, data = cbpp))
Generalized linear mixed model fit by the Laplace approximation 
Formula: cbind(incidence, size - incidence) ~ period + (1 | herd) 
   Data: cbpp 
   AIC   BIC logLik deviance
 110.1 120.2 -50.05    100.1
Random effects:
 Groups Name        Variance Std.Dev.
 herd   (Intercept) 0.4125   0.64226 
Number of obs: 56, groups: herd, 15

Fixed effects:
            Estimate Std. Error z value Pr(>|z|)
(Intercept)  -1.3985     0.2279  -6.137 8.42e-10
period2      -0.9923     0.3054  -3.249 0.001156
period3      -1.1287     0.3260  -3.462 0.000537
period4      -1.5804     0.4288  -3.686 0.000228

Correlation of Fixed Effects:
        (Intr) perid2 perid3
period2 -0.351              
period3 -0.329  0.267       
period4 -0.249  0.202  0.186
> stopifnot(is(m1,"mer"), is((cm1 <- coef(m1)), "coef.mer"),
+ 	  dim(cm1$herd) == c(15,4),
+ 	  all.equal(fixef(m1),
+ 		    c(-1.39853504914, -0.992334711,
+ 		      -1.12867541477, -1.58037390498), check.attr=FALSE)
+ 	  )
> 
> ## Simple example by Andrew Gelman (2006-01-10) ----
> n.groups <- 10 ; n.reps <- 2
> n <- length(group.id <- gl(n.groups, n.reps))
> ## simulate the varying parameters and the data:
> set.seed(0)
> a.group <- rnorm(n.groups, 1, 2)
> y <- rnorm (n, a.group[group.id], 1)
> ## fit and summarize the model
> fit.1 <- lmer (y ~ 1 + (1 | group.id))
> coef (fit.1)# failed in Matrix 0.99-6
$group.id
   (Intercept)
1    3.3760688
2   -0.2385223
3    3.1860179
4    3.1121968
5    1.4381076
6   -1.7594786
7   -0.2546842
8    0.6977648
9    1.2121675
10   4.9434830

> (sf1 <- summary(fit.1)) # show() is as without summary()
Linear mixed model fit by REML 
Formula: y ~ 1 + (1 | group.id) 
  AIC   BIC logLik deviance REMLdev
 79.4 82.39  -36.7     74.5    73.4
Random effects:
 Groups   Name        Variance Std.Dev.
 group.id (Intercept) 4.55789  2.13492 
 Residual             0.66776  0.81717 
Number of obs: 20, groups: group.id, 10

Fixed effects:
            Estimate Std. Error t value
(Intercept)   1.5713     0.6994   2.247
> 
> 
> ## ranef and coef
> rr <- ranef(fm1)
> stopifnot(is.list(rr), length(rr) == 1, class(rr[[1]]) == "data.frame")
> print(plot(rr))
$Subject

> cc <- coef(fm1)
> stopifnot(is.list(cc), length(cc) == 1, class(cc[[1]]) == "data.frame")
> print(plot(cc))
> rr <- ranef(fm2)
> stopifnot(is.list(rr), length(rr) == 1, class(rr[[1]]) == "data.frame")
> print(plot(rr))
$Subject

> cc <- coef(fm2)
> stopifnot(is.list(cc), length(cc) == 1, class(cc[[1]]) == "data.frame")
> print(plot(cc))
> 
> if (require('MASS', quietly = TRUE)) {
+     bacteria$wk2 <- bacteria$week > 2
+     contrasts(bacteria$trt) <-
+         structure(contr.sdif(3),
+                   dimnames = list(NULL, c("diag", "encourage")))
+     print(fm5 <- lmer(y ~ trt + wk2 + (1|ID), bacteria, binomial))
+     print(fm6 <- lmer(y ~ trt + wk2 + (1|ID), bacteria, binomial))
+ }
Generalized linear mixed model fit by the Laplace approximation 
Formula: y ~ trt + wk2 + (1 | ID) 
   Data: bacteria 
   AIC   BIC logLik deviance
 202.3 219.2 -96.13    192.3
Random effects:
 Groups Name        Variance Std.Dev.
 ID     (Intercept) 1.5436   1.2424  
Number of obs: 220, groups: ID, 50

Fixed effects:
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    2.8316     0.4466   6.341 2.29e-10
trtdiag       -1.3667     0.6566  -2.082 0.037376
trtencourage   0.5840     0.6734   0.867 0.385793
wk2TRUE       -1.5986     0.4612  -3.466 0.000528

Correlation of Fixed Effects:
            (Intr) trtdig trtncr
trtdiag     -0.044              
trtencourag  0.064 -0.495       
wk2TRUE     -0.794  0.063 -0.056
Generalized linear mixed model fit by the Laplace approximation 
Formula: y ~ trt + wk2 + (1 | ID) 
   Data: bacteria 
   AIC   BIC logLik deviance
 202.3 219.2 -96.13    192.3
Random effects:
 Groups Name        Variance Std.Dev.
 ID     (Intercept) 1.5436   1.2424  
Number of obs: 220, groups: ID, 50

Fixed effects:
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    2.8316     0.4466   6.341 2.29e-10
trtdiag       -1.3667     0.6566  -2.082 0.037376
trtencourage   0.5840     0.6734   0.867 0.385793
wk2TRUE       -1.5986     0.4612  -3.466 0.000528

Correlation of Fixed Effects:
            (Intr) trtdig trtncr
trtdiag     -0.044              
trtencourag  0.064 -0.495       
wk2TRUE     -0.794  0.063 -0.056
> 
> ## Invalid factor specification -- used to seg.fault:
> set.seed(1)
> dat <- data.frame(y = round(10*rnorm(100)), lagoon = factor(rep(1:4,each = 25)),
+                   habitat = factor(rep(1:20, each = 5)))
> r1  <- lmer(y ~ habitat + (1|habitat:lagoon), data = dat) # ok
> 
> try(
+     reg <- lmer(y ~ habitat + (1|habitat*lagoon), data = dat) # did seg.fault
+     ) # now gives error                 ^- should be ":"
Error in mer_finalize(ans) : 
  Cholmod error 'invalid xtype' at file:../Cholesky/cholmod_solve.c, line 971
In addition: Warning message:
In Ops.factor(habitat, lagoon) : * not meaningful for factors
> 
> 
> ## Failure to specify a random effects term - used to give an obscure message
> try(
+ m2 <- lmer(incidence / size ~ period, weights = size,
+             family = binomial, data = cbpp)
+ )
Error in lmerFactorList(formula, fr, 0L, 0L) : 
  No random effects terms specified in formula
> 
> ## useRs can set LME4_UNSAFE_BLAS for less strict checking:
> (.unsafe.BLAS <- nzchar(Sys.getenv("LME4_UNSAFE_BLAS")))
[1] FALSE
> ## needed as MacOSX (i386) gave differing results in some cases,
> ## (even on *repeating* the *same* computations!) :
> if(.unsafe.BLAS) identical <- all.equal ## "the horror" ..
> 
> ### mcmcsamp() :
> ## From: Andrew Gelman <gelman@stat.columbia.edu>
> ## Date: Wed, 18 Jan 2006 22:00:53 -0500
> 
>     has.coda <- require(coda)
Loading required package: coda

Attaching package: 'coda'

The following object(s) are masked from 'package:lme4':

    HPDinterval

>     if(!has.coda)
+         cat("'coda' package not available; some outputs will look suboptimal\n")
> 
>     ## Very simple example
>     y <- 1:10
>     group <- gl(2,5)
>     (M1 <- lmer (y ~ 1 + (1 | group))) # works fine
Linear mixed model fit by REML 
Formula: y ~ 1 + (1 | group) 
   AIC   BIC logLik deviance REMLdev
 45.31 46.22 -19.65    42.93   39.31
Random effects:
 Groups   Name        Variance Std.Dev.
 group    (Intercept) 12.0     3.4641  
 Residual              2.5     1.5811  
Number of obs: 10, groups: group, 2

Fixed effects:
            Estimate Std. Error t value
(Intercept)      5.5        2.5     2.2
>     set.seed(25)
>     (r1 <- mcmcsamp (M1))              # dito
An object of class "merMCMC"
Slot "Gp":
[1] 0 2

Slot "ST":
         [,1]
[1,] 2.190890

Slot "call":
lmer(formula = y ~ 1 + (1 | group))

Slot "deviance":
[1] 42.9257

Slot "dims":
   nt     n     p     q     s    np   LMM  REML  fTyp  lTyp  vTyp  nest useSc 
    1    10     1     2     1     1     0     1     2     5     1     1     1 
 nAGQ  verb  mxit  mxfn   cvg 
    1     0   300   900     4 

Slot "fixef":
            [,1]
(Intercept)  5.5

Slot "nc":
[1] 1

Slot "ranef":

[1,]
[2,]

Slot "sigma":
         [,1]
[1,] 1.581139

>     r2 <- mcmcsamp (M1, saveb = TRUE)  # gave error in 0.99-* and 0.995-[12]
>     (r10 <- mcmcsamp (M1, n = 10, saveb = TRUE))
An object of class "merMCMC"
Slot "Gp":
[1] 0 2

Slot "ST":
         [,1]     [,2]   [,3]     [,4]     [,5]      [,6]     [,7]      [,8]
[1,] 2.190890 2.357347 1.2607 1.310223 1.068853 0.9335019 1.010767 0.4688515
          [,9]    [,10]
[1,] 0.3225182 1.151649

Slot "call":
lmer(formula = y ~ 1 + (1 | group))

Slot "deviance":
 [1] 42.92570 42.92582 43.06062 42.68860 42.65261 42.94053 43.26243 43.06123
 [9] 45.91098 47.31819

Slot "dims":
   nt     n     p     q     s    np   LMM  REML  fTyp  lTyp  vTyp  nest useSc 
    1    10     1     2     1     1     0     1     2     5     1     1     1 
 nAGQ  verb  mxit  mxfn   cvg 
    1     0   300   900     4 

Slot "fixef":
            [,1]     [,2]    [,3]     [,4]     [,5]    [,6]     [,7]     [,8]
(Intercept)  5.5 8.500135 7.22099 4.496626 8.953627 9.33549 3.471580 5.391293
                [,9]    [,10]
(Intercept) 6.517353 5.294367

Slot "nc":
[1] 1

Slot "ranef":
          [,1]       [,2]       [,3]      [,4]       [,5]      [,6]      [,7]
[1,] -2.400157 -3.8538414 -3.9874944 -1.128572 -6.3076943 -6.685036 -1.259950
[2,]  2.400157 -0.7552534  0.7014855  2.503138 -0.3157271 -2.036684  2.517739
          [,8]       [,9]      [,10]
[1,] -1.687885 -2.4715626 -0.7075876
[2,]  3.140762  0.4975877  0.5186987

Slot "sigma":
         [,1]     [,2]   [,3]     [,4]     [,5]     [,6]     [,7]     [,8]
[1,] 1.581139 1.497841 1.9839 2.026303 2.282117 1.977191 2.410987 2.049153
         [,9]   [,10]
[1,] 2.160824 2.01181

> 
>     ## another one, still simple
>     y <- (1:20)*pi
>     x <- (1:20)^2
>     group <- gl(2,10)
>     M1 <- lmer (y ~ 1 | group)
>     mcmcsamp (M1, n = 2, saveb=TRUE) # fine
An object of class "merMCMC"
Slot "Gp":
[1] 0 2

Slot "ST":
         [,1]     [,2]
[1,] 2.313989 1.730152

Slot "call":
lmer(formula = y ~ 1 | group)

Slot "deviance":
[1] 153.8302 153.8304

Slot "dims":
   nt     n     p     q     s    np   LMM  REML  fTyp  lTyp  vTyp  nest useSc 
    1    20     1     2     1     1     0     1     2     5     1     1     1 
 nAGQ  verb  mxit  mxfn   cvg 
    1     0   300   900     4 

Slot "fixef":
                [,1]     [,2]
(Intercept) 32.98672 21.50216

Slot "nc":
[1] 1

Slot "ranef":
          [,1]     [,2]
[1,] -15.42191 -3.69386
[2,]  15.42191 28.07411

Slot "sigma":
         [,1]    [,2]
[1,] 9.511644 9.43961

> 
>     M2. <- lmer (y ~ 1 + x + (1 + x | group)) # had false convergence
>     ## convergence now ok (but ranef corr. = -1; fixef = -.996 :
>     summary(M2.)
Linear mixed model fit by REML 
Formula: y ~ 1 + x + (1 + x | group) 
   AIC   BIC logLik deviance REMLdev
 101.5 107.5 -44.77    87.59   89.54
Random effects:
 Groups   Name        Variance   Std.Dev. Corr   
 group    (Intercept) 140.641531 11.85924        
          x             0.014427  0.12011 -1.000 
 Residual               2.722977  1.65014        
Number of obs: 20, groups: group, 2

Fixed effects:
            Estimate Std. Error t value
(Intercept) 15.23552    8.40776   1.812
x            0.18559    0.08508   2.181

Correlation of Fixed Effects:
  (Intr)
x -0.996
>     M2  <- lmer (y ~ x + ( x | group))
>     ## should be identical (and is .. well, not on all versions on Mac OSX):
>     stopifnot(identical(fixef(M2), fixef(M2.)),
+ 	      identical(ranef(M2), ranef(M2.)),
+ 	      identical(resid(M2), resid(M2.)))
> 
>     mcmcsamp (M2, saveb=TRUE)
An object of class "merMCMC"
Slot "Gp":
[1] 0 4

Slot "ST":
            [,1]
[1,]  7.18678711
[2,]  0.00000000
[3,] -0.01012811

Slot "call":
lmer(formula = y ~ x + (x | group))

Slot "deviance":
[1] 87.58733

Slot "dims":
   nt     n     p     q     s    np   LMM  REML  fTyp  lTyp  vTyp  nest useSc 
    1    20     2     4     1     3     0     1     2     5     1     1     1 
 nAGQ  verb  mxit  mxfn   cvg 
    1     0   300   900     5 

Slot "fixef":
                  [,1]
(Intercept) 15.2355231
x            0.1855856

Slot "nc":
[1] 2

Slot "ranef":
            [,1]
[1,] -8.35048135
[2,]  8.35048135
[3,]  0.08457456
[4,] -0.08457456

Slot "sigma":
         [,1]
[1,] 1.650145

> 
> if (FALSE) {  # mcmcsamp for  glmer  not yet available
+ 
+     ## mcmc for glmer:
+     rG1k <- mcmcsamp(m1, n = 1000)
+     summary(rG1k)
+     rG2 <- mcmcsamp(m1, n = 3, verbose = TRUE)
+ }
> 
> ## Spencer Graves' example (from a post to S-news, 2006-08-03): ----------------
> ## FIXME?
> tstDF <- data.frame(group = letters[1:5], y = 1:5)
> var(tstDF$y) # == 2.5
[1] 2.5
> ## Now throws an error
> try(f.oops <- lmer(y ~ 1 + (1|group), data = tstDF))
Error in function (fr, FL, start, REML, verbose)  : 
  Number of levels of a grouping factor for the random effects
must be less than the number of observations
> ##  summary(f.oops) ## or print(Matrix:::formatVC(VarCorr(f.oops)), quote = FALSE)
> ## ...
> ##   Groups   Name        Variance Std.Dev.
> ##   group    (Intercept) 1.81818  1.34840
> ##   Residual             0.68182  0.82572
> ## ...
> ##
> ##SG>	 This is ... silly, because there are zero degrees of freedom
> ##SG> to distinguish "group" from Residual.  It is comforting that the sum of
> ##SG> the variances sum to the variance of "y", ......
> ##SG>	 However, I would prefer to have the multilevel software catch this
> ##SG> case and optionally return an error or drop the redundant group
> ##SG> with a warning.
> 
> ## Wrong formula gave a seg.fault at times:
> D <-  data.frame(y= rnorm(20,10), ff = gl(4,5),
+                  x1=rnorm(20,3), x2=rnorm(20,7),
+                  x3=rnorm(20,1))
> m0 <- lmer(y ~ (x1 + x2)|ff, data = D)
> m1 <- lmer(y ~ x1 + x2|ff  , data = D)
> m2 <- lmer(y ~ x1 + (x2|ff), data = D)
> m3 <- lmer(y ~ (x2|ff) + x1, data = D)
> stopifnot(identical(ranef(m0), ranef(m1)),
+ 	  identical(ranef(m2), ranef(m3)))
> stopifnot(inherits(tryCatch(lmer(y ~ x2|ff + x1, data = D), error = function(e)e),
+ 		   "error"))
Warning message:
In Ops.factor(ff, x1) : + not meaningful for factors
> 
> ## Check the use of offset
> om2 <- lmer(y ~ x1 + (x2|ff), data = D, offset = x3)
> om3 <- lmer(y ~ x1 + (x2|ff) + offset(x3), data = D)
> 
> stopifnot(identical(ranef(om2), ranef(om3)),
+           identical(deviance(om2), deviance(om3)))
> if (isTRUE(all.equal(fixef(m2), fixef(om2))))
+     stop("offset does not change the fixed effects")
> 
> ## glmer - Modeling overdispersion as "mixture" aka
> ## ----- - *ONE* random effect *PER OBSERVATION" -- example inspired by Ben Bolker:
> 
> ##' <description>
> ##'
> ##' <details>
> ##' @title
> ##' @param ng number of groups
> ##' @param nr number of "runs", i.e., observations per groups
> ##' @param sd standard deviations of group and "Individual" random effects,
> ##'    (\sigma_f, \sigma_I)
> ##' @param b  true beta (fixed effects)
> ##' @return a data frame (to be used in glmer()) with columns
> ##'    (x, f, obs, eta0, eta, mu, y), where y ~ Pois(lambda(x)),
> ##'                                   log(lambda(x_i)) = b_1 + b_2 * x + G_{f(i)} + I_i
> ##'    and G_k ~ N(0, \sigma_f);  I_i ~ N(0, \sigma_I)
> ##' @author Ben Bolker and Martin Maechler
> rPoisGLMMi <- function(ng, nr, sd=c(f = 1, ind = 0.5), b=c(1,2))
+ {
+   stopifnot(nr >= 1, ng >= 1,
+             is.numeric(sd), names(sd) %in% c("f","ind"), sd >= 0)
+   ntot <- nr*ng
+   b.reff <- rnorm(ng,  sd= sd[["f"]])
+   b.rind <- rnorm(ntot,sd= sd[["ind"]])
+   x <- runif(ntot)
+   within(data.frame(x,
+                     f = factor(rep(LETTERS[1:ng], each=nr)),
+                     obs = 1:ntot,
+                     eta0 = cbind(1, x) %*% b),
+      {
+          eta <- eta0 + b.reff[f] + b.rind[obs]
+          mu <- exp(eta)
+          y <- rpois(ntot, lambda=mu)
+      })
+ }
> dd <- rPoisGLMMi(12, 20)
> m0  <- glmer(y~x + (1|f),           family="poisson", data=dd)
> (m1 <- glmer(y~x + (1|f) + (1|obs), family="poisson", data=dd))
Number of levels of a grouping factor for the random effects
is *equal* to n, the number of observations
Generalized linear mixed model fit by the Laplace approximation 
Formula: y ~ x + (1 | f) + (1 | obs) 
   Data: dd 
   AIC   BIC logLik deviance
 585.5 599.4 -288.7    577.5
Random effects:
 Groups Name        Variance Std.Dev.
 obs    (Intercept) 0.25259  0.50259 
 f      (Intercept) 0.58065  0.76200 
Number of obs: 240, groups: obs, 240; f, 12

Fixed effects:
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   0.8204     0.2393   3.429 0.000606
x             2.1767     0.1429  15.228  < 2e-16

Correlation of Fixed Effects:
  (Intr)
x -0.351
> anova(m0, m1)
Data: dd
Models:
m0: y ~ x + (1 | f)
m1: y ~ x + (1 | f) + (1 | obs)
   Df     AIC     BIC  logLik  Chisq Chi Df Pr(>Chisq)
m0  3 1034.17 1044.61 -514.08                         
m1  4  585.49  599.41 -288.75 450.67      1  < 2.2e-16
> 
> if(.unsafe.BLAS) rm(identical)
> 
> cat('Time elapsed: ', proc.time(),'\n') # for ``statistical reasons''
Time elapsed:  5.64 0.07 5.721 0 0 
> 
