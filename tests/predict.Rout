
R Under development (unstable) (2013-10-24 r64106) -- "Unsuffered Consequences"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(lme4)
Loading required package: Matrix
> library(lattice)
> library(testthat)
> do.plots <- FALSE
> 
> L <- load(system.file("testdata/lme-tst-fits.rda",
+                       package="lme4", mustWork=TRUE))
> 
> gm1 <- fit_cbpp_1
> ## glmer(cbind(incidence, size - incidence) ~ period + (1 | herd),
> ##             data = cbpp, family = binomial)
> 
> ## fitted values
> p0 <- predict(gm1)
> p0B <- predict(gm1,newdata=cbpp)
> expect_true(all.equal(p0,unname(p0B),tol=2e-5)) ## FIXME: why not closer?
> ## fitted values, unconditional (level-0)
> p1 <- predict(gm1,ReForm=NA)
> expect_true(length(unique(p1))==length(unique(cbpp$period)))
> 
> 
> if (do.plots) matplot(cbind(p0,p1),col=1:2,type="b")
> newdata <- with(cbpp,expand.grid(period=unique(period),herd=unique(herd)))
> ## new data, all RE
> p2 <- predict(gm1,newdata)
> ## new data, level-0
> p3 <- predict(gm1,newdata,ReForm=NA)
> ## explicitly specify RE
> p4 <- predict(gm1,newdata,ReForm=~(1|herd))
> expect_true(all.equal(p2,p4))
> 
> 
> p5 <- predict(gm1,type="response")
> expect_true(all.equal(p5,plogis(p0)))
> 
> if (do.plots) matplot(cbind(p2,p3),col=1:2,type="b")
> 
> ## effects of new RE levels
> newdata2 <- rbind(newdata,
+                   data.frame(period=as.character(1:4),herd=rep("new",4)))
> expect_true(is(try(predict(gm1,newdata2),silent=TRUE),"try-error"))
> p6 <- predict(gm1,newdata2,allow.new.levels=TRUE)
> expect_true(all.equal(p2,p6[1:length(p2)]))  ## original values should match
> ## last 4 values should match unconditional values
> expect_true(all(tail(p6,4)==predict(gm1,newdata=data.frame(period=factor(1:4)),ReForm=NA)))
> 
> ## multi-group model
> fm1 <- lmer(diameter ~ (1|plate) + (1|sample), Penicillin)
> ## fitted values
> p0 <- predict(fm1)
> ## fitted values, unconditional (level-0)
> p1 <- predict(fm1,ReForm=NA)
> 
> if (do.plots) matplot(cbind(p0,p1),col=1:2,type="b")
> newdata <- with(Penicillin,expand.grid(plate=unique(plate),sample=unique(sample)))
> ## new data, all RE
> p2 <- predict(fm1,newdata)
> ## new data, level-0
> p3 <- predict(fm1,newdata,ReForm=NA)
> ## explicitly specify RE
> p4 <- predict(fm1,newdata,ReForm=~(1|plate)+(~1|sample))
> p4B <- predict(fm1,newdata,ReForm=~(1|sample)+(~1|plate))
> expect_true(all.equal(p2,p4,p4B))
> 
> p5 <- predict(fm1,newdata,ReForm=~(1|sample))
> p6 <- predict(fm1,newdata,ReForm=~(1|plate))
> 
> if (do.plots) matplot(cbind(p2,p3,p5,p6),type="b",lty=1,pch=16)
> 
> fm2 <- fit_sleepstudy_2
> p0 <- predict(fm2)
> p1 <- predict(fm2,ReForm=NA)
> ## linear model, so results should be identical patterns but smaller --
> ##   not including intermediate days
> newdata <- with(sleepstudy,expand.grid(Days=range(Days),Subject=unique(Subject)))
> newdata$p2 <- predict(fm2,newdata)
> newdata$p3 <- predict(fm2,newdata,ReForm=NA)
> newdata$p4 <- predict(fm2,newdata,ReForm=~(0+Days|Subject))
> newdata$p5 <- predict(fm2,newdata,ReForm=~(1|Subject))
> 
> ## reference values from an apparently-working run
> refval <- structure(list(Days = c(0, 9, 0, 9, 0, 9), Subject = structure(c(1L, 
+ 1L, 2L, 2L, 3L, 3L), .Label = c("308", "309", "310", "330", "331", 
+ "332", "333", "334", "335", "337", "349", "350", "351", "352", 
+ "369", "370", "371", "372"), class = "factor"), p2 = c(253.663652396798, 
+ 430.66001930835, 211.006415533628, 227.634788908917, 212.444742696829, 
+ 257.61053840953), p3 = c(251.405104848485, 345.610678484848, 
+ 251.405104848485, 345.610678484848, 251.405104848485, 345.610678484848
+ ), p4 = c(251.405104848485, 428.401471760037, 251.405104848485, 
+ 268.033478223774, 251.405104848485, 296.570900561186), p5 = c(253.663652396798, 
+ 347.869226033161, 211.006415533628, 305.211989169991, 212.444742696829, 
+ 306.650316333193)), .Names = c("Days", "Subject", "p2", "p3", 
+ "p4", "p5"), out.attrs = structure(list(dim = structure(c(2L, 
+ 18L), .Names = c("Days", "Subject")), dimnames = structure(list(
+     Days = c("Days=0", "Days=9"), Subject = c("Subject=308", 
+     "Subject=309", "Subject=310", "Subject=330", "Subject=331", 
+     "Subject=332", "Subject=333", "Subject=334", "Subject=335", 
+     "Subject=337", "Subject=349", "Subject=350", "Subject=351", 
+     "Subject=352", "Subject=369", "Subject=370", "Subject=371", 
+     "Subject=372")), .Names = c("Days", "Subject"))), .Names = c("dim", 
+ "dimnames")), row.names = c(NA, 6L), class = "data.frame")
> 
> expect_true(all.equal(head(newdata),refval))
> 
> library(lattice)
> tmpf <- function(data,...) {
+   data$Reaction <- predict(fm2,data,...)
+   if (do.plots) xyplot(Reaction~Days,group=Subject,data=data,type="l")
+ }
> tmpf(sleepstudy)
> tmpf(sleepstudy,ReForm=NA)
> tmpf(sleepstudy,ReForm=~(0+Days|Subject))
> tmpf(sleepstudy,ReForm=~(1|Subject))
> 
> ## from 'Colonel Triq': examples using *fewer* random effect levels
> ##  than in original data set
> m <- lmer(angle ~ temp + recipe + (1 | replicate), data=cake)
> summary(m)
Linear mixed model fit by REML ['lmerMod']
Formula: angle ~ temp + recipe + (1 | replicate) 
   Data: cake 

REML criterion at convergence: 1663.848 

Random effects:
 Groups    Name        Variance Std.Dev.
 replicate (Intercept) 39.21    6.261   
 Residual              23.16    4.813   
Number of obs: 270, groups: replicate, 15

Fixed effects:
            Estimate Std. Error t value
(Intercept)  1.51587    3.82572   0.396
temp         0.15803    0.01715   9.215
recipeB     -1.47778    0.71744  -2.060
recipeC     -1.52222    0.71744  -2.122

Correlation of Fixed Effects:
        (Intr) temp   recipB
temp    -0.897              
recipeB -0.094  0.000       
recipeC -0.094  0.000  0.500
> 
> # replicate 1 only appears in rows 1:18.
> rownames(cake[cake$replicate==1,])
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18"
> 
> predict(m, newdata=cake[-1:-17,], ReForm=~ (1 | replicate))
      18       19       20       21       22       23       24       25 
49.79441 42.17787 43.75819 45.33851 46.91883 48.49914 50.07946 40.70010 
      26       27       28       29       30       31       32       33 
42.28041 43.86073 45.44105 47.02137 48.60168 40.65565 42.23597 43.81629 
      34       35       36       37       38       39       40       41 
45.39660 46.97692 48.55724 33.84041 35.42073 37.00104 38.58136 40.16168 
      42       43       44       45       46       47       48       49 
41.74200 32.36263 33.94295 35.52327 37.10358 38.68390 40.26422 32.31819 
      50       51       52       53       54       55       56       57 
33.89850 35.47882 37.05914 38.63946 40.21977 30.29026 31.87058 33.45090 
      58       59       60       61       62       63       64       65 
35.03121 36.61153 38.19185 28.81248 30.39280 31.97312 33.55344 35.13375 
      66       67       68       69       70       71       72       73 
36.71407 28.76804 30.34836 31.92868 33.50899 35.08931 36.66963 29.42962 
      74       75       76       77       78       79       80       81 
31.00994 32.59026 34.17057 35.75089 37.33121 27.95184 29.53216 31.11248 
      82       83       84       85       86       87       88       89 
32.69280 34.27311 35.85343 27.90740 29.48772 31.06803 32.64835 34.22867 
      90       91       92       93       94       95       96       97 
35.80899 25.87947 27.45979 29.04011 30.62043 32.20074 33.78106 24.40170 
      98       99      100      101      102      103      104      105 
25.98201 27.56233 29.14265 30.72297 32.30328 24.35725 25.93757 27.51789 
     106      107      108      109      110      111      112      113 
29.09820 30.67852 32.25884 24.53472 26.11504 27.69536 29.27567 30.85599 
     114      115      116      117      118      119      120      121 
32.43631 23.05694 24.63726 26.21758 27.79790 29.37821 30.95853 23.01250 
     122      123      124      125      126      127      128      129 
24.59282 26.17314 27.75345 29.33377 30.91409 24.58851 26.16883 27.74915 
     130      131      132      133      134      135      136      137 
29.32946 30.90978 32.49010 23.11073 24.69105 26.27137 27.85169 29.43200 
     138      139      140      141      142      143      144      145 
31.01232 23.06629 24.64661 26.22693 27.80724 29.38756 30.96788 24.53472 
     146      147      148      149      150      151      152      153 
26.11504 27.69536 29.27567 30.85599 32.43631 23.05694 24.63726 26.21758 
     154      155      156      157      158      159      160      161 
27.79790 29.37821 30.95853 23.01250 24.59282 26.17314 27.75345 29.33377 
     162      163      164      165      166      167      168      169 
30.91409 25.98706 27.56737 29.14769 30.72801 32.30832 33.88864 24.50928 
     170      171      172      173      174      175      176      177 
26.08959 27.66991 29.25023 30.83055 32.41086 24.46483 26.04515 27.62547 
     178      179      180      181      182      183      184      185 
29.20579 30.78610 32.36642 27.00907 28.58938 30.16970 31.75002 33.33034 
     186      187      188      189      190      191      192      193 
34.91065 25.53129 27.11161 28.69192 30.27224 31.85256 33.43288 25.48684 
     194      195      196      197      198      199      200      201 
27.06716 28.64748 30.22780 31.80811 33.38843 28.03108 29.61140 31.19171 
     202      203      204      205      206      207      208      209 
32.77203 34.35235 35.93267 26.55330 28.13362 29.71394 31.29425 32.87457 
     210      211      212      213      214      215      216      217 
34.45489 26.50886 28.08917 29.66949 31.24981 32.83013 34.41044 28.94551 
     218      219      220      221      222      223      224      225 
30.52583 32.10615 33.68646 35.26678 36.84710 27.46773 29.04805 30.62837 
     226      227      228      229      230      231      232      233 
32.20868 33.78900 35.36932 27.42329 29.00361 30.58392 32.16424 33.74456 
     234      235      236      237      238      239      240      241 
35.32488 25.07262 26.65294 28.23326 29.81358 31.39389 32.97421 23.59485 
     242      243      244      245      246      247      248      249 
25.17516 26.75548 28.33580 29.91612 31.49643 23.55040 25.13072 26.71104 
     250      251      252      253      254      255      256      257 
28.29135 29.87167 31.45199 23.83545 25.41577 26.99609 28.57640 30.15672 
     258      259      260      261      262      263      264      265 
31.73704 22.35767 23.93799 25.51831 27.09863 28.67894 30.25926 22.31323 
     266      267      268      269      270 
23.89355 25.47386 27.05418 28.63450 30.21482 
> predict(m, newdata=cake[-1:-18,], ReForm=NA)
      19       20       21       22       23       24       25       26 
29.17143 30.75175 32.33206 33.91238 35.49270 37.07302 27.69365 29.27397 
      27       28       29       30       31       32       33       34 
30.85429 32.43460 34.01492 35.59524 27.64921 29.22952 30.80984 32.39016 
      35       36       37       38       39       40       41       42 
33.97048 35.55079 29.17143 30.75175 32.33206 33.91238 35.49270 37.07302 
      43       44       45       46       47       48       49       50 
27.69365 29.27397 30.85429 32.43460 34.01492 35.59524 27.64921 29.22952 
      51       52       53       54       55       56       57       58 
30.80984 32.39016 33.97048 35.55079 29.17143 30.75175 32.33206 33.91238 
      59       60       61       62       63       64       65       66 
35.49270 37.07302 27.69365 29.27397 30.85429 32.43460 34.01492 35.59524 
      67       68       69       70       71       72       73       74 
27.64921 29.22952 30.80984 32.39016 33.97048 35.55079 29.17143 30.75175 
      75       76       77       78       79       80       81       82 
32.33206 33.91238 35.49270 37.07302 27.69365 29.27397 30.85429 32.43460 
      83       84       85       86       87       88       89       90 
34.01492 35.59524 27.64921 29.22952 30.80984 32.39016 33.97048 35.55079 
      91       92       93       94       95       96       97       98 
29.17143 30.75175 32.33206 33.91238 35.49270 37.07302 27.69365 29.27397 
      99      100      101      102      103      104      105      106 
30.85429 32.43460 34.01492 35.59524 27.64921 29.22952 30.80984 32.39016 
     107      108      109      110      111      112      113      114 
33.97048 35.55079 29.17143 30.75175 32.33206 33.91238 35.49270 37.07302 
     115      116      117      118      119      120      121      122 
27.69365 29.27397 30.85429 32.43460 34.01492 35.59524 27.64921 29.22952 
     123      124      125      126      127      128      129      130 
30.80984 32.39016 33.97048 35.55079 29.17143 30.75175 32.33206 33.91238 
     131      132      133      134      135      136      137      138 
35.49270 37.07302 27.69365 29.27397 30.85429 32.43460 34.01492 35.59524 
     139      140      141      142      143      144      145      146 
27.64921 29.22952 30.80984 32.39016 33.97048 35.55079 29.17143 30.75175 
     147      148      149      150      151      152      153      154 
32.33206 33.91238 35.49270 37.07302 27.69365 29.27397 30.85429 32.43460 
     155      156      157      158      159      160      161      162 
34.01492 35.59524 27.64921 29.22952 30.80984 32.39016 33.97048 35.55079 
     163      164      165      166      167      168      169      170 
29.17143 30.75175 32.33206 33.91238 35.49270 37.07302 27.69365 29.27397 
     171      172      173      174      175      176      177      178 
30.85429 32.43460 34.01492 35.59524 27.64921 29.22952 30.80984 32.39016 
     179      180      181      182      183      184      185      186 
33.97048 35.55079 29.17143 30.75175 32.33206 33.91238 35.49270 37.07302 
     187      188      189      190      191      192      193      194 
27.69365 29.27397 30.85429 32.43460 34.01492 35.59524 27.64921 29.22952 
     195      196      197      198      199      200      201      202 
30.80984 32.39016 33.97048 35.55079 29.17143 30.75175 32.33206 33.91238 
     203      204      205      206      207      208      209      210 
35.49270 37.07302 27.69365 29.27397 30.85429 32.43460 34.01492 35.59524 
     211      212      213      214      215      216      217      218 
27.64921 29.22952 30.80984 32.39016 33.97048 35.55079 29.17143 30.75175 
     219      220      221      222      223      224      225      226 
32.33206 33.91238 35.49270 37.07302 27.69365 29.27397 30.85429 32.43460 
     227      228      229      230      231      232      233      234 
34.01492 35.59524 27.64921 29.22952 30.80984 32.39016 33.97048 35.55079 
     235      236      237      238      239      240      241      242 
29.17143 30.75175 32.33206 33.91238 35.49270 37.07302 27.69365 29.27397 
     243      244      245      246      247      248      249      250 
30.85429 32.43460 34.01492 35.59524 27.64921 29.22952 30.80984 32.39016 
     251      252      253      254      255      256      257      258 
33.97048 35.55079 29.17143 30.75175 32.33206 33.91238 35.49270 37.07302 
     259      260      261      262      263      264      265      266 
27.69365 29.27397 30.85429 32.43460 34.01492 35.59524 27.64921 29.22952 
     267      268      269      270 
30.80984 32.39016 33.97048 35.55079 
> predict(m, newdata=cake[-1:-18,], ReForm=~ (1 | replicate)) 
      19       20       21       22       23       24       25       26 
42.17787 43.75819 45.33851 46.91883 48.49914 50.07946 40.70010 42.28041 
      27       28       29       30       31       32       33       34 
43.86073 45.44105 47.02137 48.60168 40.65565 42.23597 43.81629 45.39660 
      35       36       37       38       39       40       41       42 
46.97692 48.55724 33.84041 35.42073 37.00104 38.58136 40.16168 41.74200 
      43       44       45       46       47       48       49       50 
32.36263 33.94295 35.52327 37.10358 38.68390 40.26422 32.31819 33.89850 
      51       52       53       54       55       56       57       58 
35.47882 37.05914 38.63946 40.21977 30.29026 31.87058 33.45090 35.03121 
      59       60       61       62       63       64       65       66 
36.61153 38.19185 28.81248 30.39280 31.97312 33.55344 35.13375 36.71407 
      67       68       69       70       71       72       73       74 
28.76804 30.34836 31.92868 33.50899 35.08931 36.66963 29.42962 31.00994 
      75       76       77       78       79       80       81       82 
32.59026 34.17057 35.75089 37.33121 27.95184 29.53216 31.11248 32.69280 
      83       84       85       86       87       88       89       90 
34.27311 35.85343 27.90740 29.48772 31.06803 32.64835 34.22867 35.80899 
      91       92       93       94       95       96       97       98 
25.87947 27.45979 29.04011 30.62043 32.20074 33.78106 24.40170 25.98201 
      99      100      101      102      103      104      105      106 
27.56233 29.14265 30.72297 32.30328 24.35725 25.93757 27.51789 29.09820 
     107      108      109      110      111      112      113      114 
30.67852 32.25884 24.53472 26.11504 27.69536 29.27567 30.85599 32.43631 
     115      116      117      118      119      120      121      122 
23.05694 24.63726 26.21758 27.79790 29.37821 30.95853 23.01250 24.59282 
     123      124      125      126      127      128      129      130 
26.17314 27.75345 29.33377 30.91409 24.58851 26.16883 27.74915 29.32946 
     131      132      133      134      135      136      137      138 
30.90978 32.49010 23.11073 24.69105 26.27137 27.85169 29.43200 31.01232 
     139      140      141      142      143      144      145      146 
23.06629 24.64661 26.22693 27.80724 29.38756 30.96788 24.53472 26.11504 
     147      148      149      150      151      152      153      154 
27.69536 29.27567 30.85599 32.43631 23.05694 24.63726 26.21758 27.79790 
     155      156      157      158      159      160      161      162 
29.37821 30.95853 23.01250 24.59282 26.17314 27.75345 29.33377 30.91409 
     163      164      165      166      167      168      169      170 
25.98706 27.56737 29.14769 30.72801 32.30832 33.88864 24.50928 26.08959 
     171      172      173      174      175      176      177      178 
27.66991 29.25023 30.83055 32.41086 24.46483 26.04515 27.62547 29.20579 
     179      180      181      182      183      184      185      186 
30.78610 32.36642 27.00907 28.58938 30.16970 31.75002 33.33034 34.91065 
     187      188      189      190      191      192      193      194 
25.53129 27.11161 28.69192 30.27224 31.85256 33.43288 25.48684 27.06716 
     195      196      197      198      199      200      201      202 
28.64748 30.22780 31.80811 33.38843 28.03108 29.61140 31.19171 32.77203 
     203      204      205      206      207      208      209      210 
34.35235 35.93267 26.55330 28.13362 29.71394 31.29425 32.87457 34.45489 
     211      212      213      214      215      216      217      218 
26.50886 28.08917 29.66949 31.24981 32.83013 34.41044 28.94551 30.52583 
     219      220      221      222      223      224      225      226 
32.10615 33.68646 35.26678 36.84710 27.46773 29.04805 30.62837 32.20868 
     227      228      229      230      231      232      233      234 
33.78900 35.36932 27.42329 29.00361 30.58392 32.16424 33.74456 35.32488 
     235      236      237      238      239      240      241      242 
25.07262 26.65294 28.23326 29.81358 31.39389 32.97421 23.59485 25.17516 
     243      244      245      246      247      248      249      250 
26.75548 28.33580 29.91612 31.49643 23.55040 25.13072 26.71104 28.29135 
     251      252      253      254      255      256      257      258 
29.87167 31.45199 23.83545 25.41577 26.99609 28.57640 30.15672 31.73704 
     259      260      261      262      263      264      265      266 
22.35767 23.93799 25.51831 27.09863 28.67894 30.25926 22.31323 23.89355 
     267      268      269      270 
25.47386 27.05418 28.63450 30.21482 
> predict(m, newdata=cake[-1:-18,], ReForm=~ (1 | replicate), allow.new.levels=TRUE)
      19       20       21       22       23       24       25       26 
42.17787 43.75819 45.33851 46.91883 48.49914 50.07946 40.70010 42.28041 
      27       28       29       30       31       32       33       34 
43.86073 45.44105 47.02137 48.60168 40.65565 42.23597 43.81629 45.39660 
      35       36       37       38       39       40       41       42 
46.97692 48.55724 33.84041 35.42073 37.00104 38.58136 40.16168 41.74200 
      43       44       45       46       47       48       49       50 
32.36263 33.94295 35.52327 37.10358 38.68390 40.26422 32.31819 33.89850 
      51       52       53       54       55       56       57       58 
35.47882 37.05914 38.63946 40.21977 30.29026 31.87058 33.45090 35.03121 
      59       60       61       62       63       64       65       66 
36.61153 38.19185 28.81248 30.39280 31.97312 33.55344 35.13375 36.71407 
      67       68       69       70       71       72       73       74 
28.76804 30.34836 31.92868 33.50899 35.08931 36.66963 29.42962 31.00994 
      75       76       77       78       79       80       81       82 
32.59026 34.17057 35.75089 37.33121 27.95184 29.53216 31.11248 32.69280 
      83       84       85       86       87       88       89       90 
34.27311 35.85343 27.90740 29.48772 31.06803 32.64835 34.22867 35.80899 
      91       92       93       94       95       96       97       98 
25.87947 27.45979 29.04011 30.62043 32.20074 33.78106 24.40170 25.98201 
      99      100      101      102      103      104      105      106 
27.56233 29.14265 30.72297 32.30328 24.35725 25.93757 27.51789 29.09820 
     107      108      109      110      111      112      113      114 
30.67852 32.25884 24.53472 26.11504 27.69536 29.27567 30.85599 32.43631 
     115      116      117      118      119      120      121      122 
23.05694 24.63726 26.21758 27.79790 29.37821 30.95853 23.01250 24.59282 
     123      124      125      126      127      128      129      130 
26.17314 27.75345 29.33377 30.91409 24.58851 26.16883 27.74915 29.32946 
     131      132      133      134      135      136      137      138 
30.90978 32.49010 23.11073 24.69105 26.27137 27.85169 29.43200 31.01232 
     139      140      141      142      143      144      145      146 
23.06629 24.64661 26.22693 27.80724 29.38756 30.96788 24.53472 26.11504 
     147      148      149      150      151      152      153      154 
27.69536 29.27567 30.85599 32.43631 23.05694 24.63726 26.21758 27.79790 
     155      156      157      158      159      160      161      162 
29.37821 30.95853 23.01250 24.59282 26.17314 27.75345 29.33377 30.91409 
     163      164      165      166      167      168      169      170 
25.98706 27.56737 29.14769 30.72801 32.30832 33.88864 24.50928 26.08959 
     171      172      173      174      175      176      177      178 
27.66991 29.25023 30.83055 32.41086 24.46483 26.04515 27.62547 29.20579 
     179      180      181      182      183      184      185      186 
30.78610 32.36642 27.00907 28.58938 30.16970 31.75002 33.33034 34.91065 
     187      188      189      190      191      192      193      194 
25.53129 27.11161 28.69192 30.27224 31.85256 33.43288 25.48684 27.06716 
     195      196      197      198      199      200      201      202 
28.64748 30.22780 31.80811 33.38843 28.03108 29.61140 31.19171 32.77203 
     203      204      205      206      207      208      209      210 
34.35235 35.93267 26.55330 28.13362 29.71394 31.29425 32.87457 34.45489 
     211      212      213      214      215      216      217      218 
26.50886 28.08917 29.66949 31.24981 32.83013 34.41044 28.94551 30.52583 
     219      220      221      222      223      224      225      226 
32.10615 33.68646 35.26678 36.84710 27.46773 29.04805 30.62837 32.20868 
     227      228      229      230      231      232      233      234 
33.78900 35.36932 27.42329 29.00361 30.58392 32.16424 33.74456 35.32488 
     235      236      237      238      239      240      241      242 
25.07262 26.65294 28.23326 29.81358 31.39389 32.97421 23.59485 25.17516 
     243      244      245      246      247      248      249      250 
26.75548 28.33580 29.91612 31.49643 23.55040 25.13072 26.71104 28.29135 
     251      252      253      254      255      256      257      258 
29.87167 31.45199 23.83545 25.41577 26.99609 28.57640 30.15672 31.73704 
     259      260      261      262      263      264      265      266 
22.35767 23.93799 25.51831 27.09863 28.67894 30.25926 22.31323 23.89355 
     267      268      269      270 
25.47386 27.05418 28.63450 30.21482 
> 
> 
> 
> proc.time()
   user  system elapsed 
  4.324   2.752   8.119 
