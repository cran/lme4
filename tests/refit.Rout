
R Under development (unstable) (2016-07-26 r70976) -- "Unsuffered Consequences"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #### Testing  refit()
> #### ----------------
> 
> library(lme4)
Loading required package: Matrix
> set.seed(101)
> 
> ## for each type of model, should be able to
> ##  (1) refit with same data and get the same answer,
> ##     at least structurally (small numerical differences
> ##     are probably unavoidable)
> ##  (2) refit with simulate()d data
> 
> getinfo <- function(x) {
+   c(fixef(x), logLik(x), unlist(ranef(x)), unlist(VarCorr(x)))
+ }
> 
> dropterms <- function(x) {
+     attr(x@frame,"terms") <- NULL
+     x
+ }
> 
> if (getRversion() >= "3.0.0") {
+     attach(system.file("testdata", "lme-tst-fits.rda", package="lme4"))
+ } else {
+     ## saved fits are not safe with old R versions; just re-compute ("cheat"!):
+ 
+     fit_sleepstudy_2 <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy)
+ 
+     cbpp$obs <- factor(seq(nrow(cbpp)))
+     ## intercept-only fixed effect
+     fit_cbpp_0 <- glmer(cbind(incidence, size-incidence) ~ 1 + (1|herd),
+                         cbpp, family=binomial)
+     ## include fixed effect of period
+     fit_cbpp_1 <- update(fit_cbpp_0, . ~ . + period)
+     if(FALSE) ## include observation-level RE
+         fit_cbpp_2 <- update(fit_cbpp_1, . ~ . + (1|obs))
+     ## specify formula by proportion/weights instead
+     fit_cbpp_3 <- update(fit_cbpp_1, incidence/size ~ period + (1 | herd), weights = size)
+ }
> 
> 
> ## LMM
> fm1 <- fit_sleepstudy_2
> fm1R <- refit(fm1, sleepstudy$Reaction)
> fm1S <- refit(fm1, simulate(fm1)[[1]])
> 
> stopifnot(all.equal(getinfo(fm1 ),
+                     getinfo(fm1R), tolerance = 6e-3),
+           all.equal(getinfo(fm1 ),
+                     getinfo(fm1S), tolerance = 0.5) # <- simulate()
+           )
> 
> if(FALSE) ## show all differences
+     sapply(slotNames(fm1), function(.)
+         all.equal( slot(fm1,.), slot(fm1R,.), tolerance=0))
> 
> ## skip optinfo -- different in old versions ...
> sapply(setdiff(slotNames(fm1R),"optinfo"),
+        function(.) { cat(.,"\n"); isTRUE(all.equal( slot(fm1,.), slot(fm1R,.), tolerance= 1.5e-5)) })
resp 
Error in as.character.factor(target) : attempting to coerce non-factor
Calls: sapply ... all.equal.factor -> all.equal -> as.character -> as.character.factor
Execution halted
